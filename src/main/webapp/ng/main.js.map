{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/service/rest.service.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/app/user/userAlfresco.model.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {AppComponent} from './app.component';\nimport {UserComponent} from './user/user.component';\nimport {HomeComponent} from './home/home.component';\n\nconst routes: Routes = [\n  {\n    path: 'index', component: HomeComponent,\n  },\n  {\n    path: 'user', component: UserComponent,\n  },\n  {\n    path: '**', component: HomeComponent,\n  },\n  { path: '',   redirectTo: '/index', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \" <nav class=\\\"nav justify-content-center\\\">\\n    <a class=\\\"nav-link active\\\" routerLink=\\\"/index\\\" routerLinkActive=\\\"active\\\">Index</a>\\n   <a class=\\\"nav-link active\\\" routerLink=\\\"/user\\\" routerLinkActive=\\\"active\\\">User</a>\\n   <a  class=\\\"nav-link active\\\" placement=\\\"bottom\\\" [ngbPopover]=\\\"popContent\\\" [popoverTitle]=\\\"popTitle\\\" triggers=\\\"mouseenter:mouseleave\\\">{{fullName}}</a>\\n   <a href=\\\"../ng/logout\\\" class=\\\"nav-link active\\\">Logout</a>\\n  </nav>\\n <ng-template #popTitle>Hello, <b>{{fullName}}</b>!</ng-template>\\n <ng-template #popContent>You are logged in Alfresco, using id <b>{{idAlfresco}}</b>. Email registered is <b>{{email}}</b></ng-template>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport {RestService} from './service/rest.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n})\n\nexport class AppComponent {\n  fullName: string;\n  email: string;\n  idAlfresco: string;\n  router: Router;\n  constructor(router: Router, private rest: RestService) {\n    this.router = router;\n    const response = this.rest.getAlfrescoUserInfo();\n    response.subscribe(\n      data => { console.log(JSON.stringify(data));\n        console.log('User Info object' + data);\n        console.log('User name: ' + data['entry']['firstName']);\n        this.fullName = data['entry']['firstName'] + ' ' + data['entry']['lastName'];\n        this.email = data['entry']['email'];\n        this.idAlfresco = data['entry']['id'];\n      } ,\n      error => { console.log(error);  }\n    );\n  }\n  logout() {\n    this.router.navigateByUrl('/logout');\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UserComponent } from './user/user.component';\nimport { HomeComponent } from './home/home.component';\nimport { RestService } from './service/rest.service';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    HomeComponent\n  ],\n  imports: [\n    NgbModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n  ],\n  providers: [RestService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div style=\\\"text-align:center\\\"class=\\\"container\\\">\\n  <h1>\\n    Welcome {{title}}!\\n  </h1>\\n  <div class=\\\"container\\\">\\n    <p>Id: <span>{{id}}</span></p>\\n    <p>Message: <span>{{data}}!</span></p>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n  title = 'Demo Rest';\n  data: string;\n  id: string;\n\n  constructor(private http: HttpClient, private router: Router) { http.get('resource').subscribe(\n    data => {\n      console.log(data);\n      this.data = data['data'];\n      this.id = data['id'];\n      console.log('data: ' + this.data);\n      console.log('id: ' + this.id);\n    },\n    err => {\n      console.log('Error occured.');\n    });}\n  userInfo() {\n    this.router.navigateByUrl('/user');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n@Injectable()\nexport class RestService {\n  baseUrl: string;\n  constructor(private http: HttpClient) {\n  }\n  testService() {\n    console.log('rest service ...');\n  }\n  /*getAlfrescoTicket(credentials: string): Observable<string> {\n    console.log('Url: ' + this.baseUrl);\n    console.log('getAlfrescoTicket');\n    return this.sendRequest('POST', this.baseUrl + 'alfresco/service/api/login', credentials);\n  }*/\n  getAlfrescoUserInfo() {\n    console.log('getAlfrescoUserInfo');\n    return this.sendRequest('GET', 'alfresco/user/info');\n  }\n  private sendRequest<T>(type: string, url: string, body?: String)\n    : Observable<T> {\n    console.log('url in send request: ' + url);\n    console.log('sendRequest body ' + body);\n    let myHeaders = new HttpHeaders();\n    myHeaders = myHeaders.set('Access-Control-Allow-Headers', 'X-Requested-With,Content-Type');\n    myHeaders = myHeaders.set('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE');\n    myHeaders = myHeaders.set('Access-Control-Allow-Origin', '*');\n    return this.http.request<T>(type, url, {\n      body: body,\n      headers: myHeaders\n    });\n  }\n  testJson(username: string, password: string) {\n    console.log('');\n  }\n  updateAlfrescoUserInformation(data: string) {\n    console.log('data: ' + data);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<style>\\n  input.ng-dirty.ng-invalid { border: 2px solid #ff0000 }\\n  input.ng-dirty.ng-valid { border: 2px solid #6bc502 }\\n</style>\\n<p [ngClass]=\\\"{\\n    'text-success': values === '',\\n    'text-danger': values !== ''\\n  }\\\">{{valuesID}} </p>\\n\\n<p [ngClass]=\\\"{\\n    'text-success': values === '',\\n    'text-danger': values !== ''\\n  }\\\">{{valuesFirstName}} </p>\\n\\n<p [ngClass]=\\\"{\\n    'text-success': values === '',\\n    'text-danger': values !== ''\\n  }\\\">{{valuesLastName}} </p>\\n\\n\\n<p [ngClass]=\\\"{\\n    'text-success': values === '',\\n    'text-danger': values !== ''\\n  }\\\">{{valuesEmail}} </p>\\n\\n<form novalidate #form=\\\"ngForm\\\" (ngSubmit)=\\\"saveChanges(form)\\\">\\n  <div class=\\\"bg-danger text-white p-2 mb-2\\\"\\n       *ngIf=\\\"form.invalid\\\">\\n    There are problems with the form\\n    <ul>\\n      <li *ngFor=\\\"let error of getFormValidationMessages(form)\\\">\\n        {{error}}\\n      </li>\\n    </ul>\\n  </div>\\n<input class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone:true}\\\" [(ngModel)]=\\\"newUserAlfresco.id\\\" (keyup)=\\\"onKey($event)\\\" required readonly/>\\n<br>\\n<br>\\n<input class=\\\"form-control ng-invalid ng-touched ng-pristine\\\" #name1=\\\"ngModel\\\" name=\\\"Primo nome\\\" [(ngModel)]=\\\"newUserAlfresco.firstName\\\" (keyup)=\\\"onKey($event)\\\" required />\\n  <ul class=\\\"text-danger list-unstyled\\\"\\n      *ngIf=\\\"(name1.dirty) && name1.invalid\\\">\\n    <li *ngFor=\\\"let error of getValidationMessages(name1)\\\">\\n      {{error}}\\n    </li>\\n  </ul>\\n<br>\\n<input class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone:true}\\\" [(ngModel)]=\\\"newUserAlfresco.lastname\\\" (keyup)=\\\"onKey($event)\\\" required/>\\n<br>\\n<input type=\\\"email\\\" class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone:true}\\\" [(ngModel)]=\\\"newUserAlfresco.email\\\" (keyup)=\\\"onKey($event)\\\" required email/>\\n<br>\\n<br>\\n<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"  [disabled]=\\\"form.invalid\\\"\\n        [class.btn-secondary]=\\\"form.invalid\\\">SAVE</button>\\n<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancelChanges()\\\">CANCEL CHANGES</button>\\n</form>\\n\"","import {Component} from '@angular/core';\nimport {RestService} from '../service/rest.service';\nimport {UserAlfresco} from './userAlfresco.model';\nimport {NgForm} from '@angular/forms';\n\n@Component({\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent {\n  valuesFirstName = '';\n  valuesLastName = '';\n  valuesID = '';\n  valuesEmail = '';\n  userAlfresco: UserAlfresco = new UserAlfresco();\n  newUserAlfresco: UserAlfresco = new UserAlfresco();\n  private data: object;\n  constructor(private rest: RestService) { console.log('UserComonent');\n    this.rest.testService();\n    const response = this.rest.getAlfrescoUserInfo();\n    response.subscribe(\n      data => { console.log(JSON.stringify(data));\n        console.log('User Info object' + data);\n        console.log('User name: ' + data['entry']['firstName']);\n        this.data = data;\n        this.userAlfresco.id = data['entry']['id'];\n        this.newUserAlfresco.id = data['entry']['id'];\n        this.userAlfresco.firstName = data['entry']['firstName'];\n        this.newUserAlfresco.firstName = data['entry']['firstName'];\n        this.userAlfresco.lastname = data['entry']['lastName'];\n        this.newUserAlfresco.lastname = data['entry']['lastName'];\n        this.userAlfresco.email = data['entry']['email'];\n        this.newUserAlfresco.email = data['entry']['email'];\n      } ,\n      error => { console.log(error);  }\n    );\n  }\n  getData() {\n    return this.data;\n  }\n  onKey(event: any) { // without type info\n   /* if ( this.userAlfresco.firstName === this.newUserAlfresco.firstName) {\n      this.values = '';\n    }  else {\n      this.values = 'Old name: ' + this.userAlfresco.firstName + ' New Name: ' + this.newUserAlfresco.firstName;\n    }*/\n    if ( this.userAlfresco === this.newUserAlfresco) {\n      console.log('Object is equal');\n      this.valuesFirstName = '';\n    } else {\n      console.log('New User has new attributes');\n    }\n      if ( this.userAlfresco.firstName !== this.newUserAlfresco.firstName) {\n        this.valuesFirstName = 'Old name: ' + this.userAlfresco.firstName + ' New Name: ' + this.newUserAlfresco.firstName;\n      } else {\n        this.valuesFirstName = '';\n      }\n      if ( this.userAlfresco.email !== this.newUserAlfresco.email) {\n        this.valuesEmail = 'Old email: ' + this.userAlfresco.email + ' New email: ' + this.newUserAlfresco.email;\n      } else {\n        this.valuesEmail = '';\n      }\n      if ( this.userAlfresco.id !== this.newUserAlfresco.id) {\n        this.valuesID = 'Old ID: ' + this.userAlfresco.id + ' New ID: ' + this.newUserAlfresco.id + '\\nPAY ATTENTION!!! ' +\n          'IF YOU CHANGE ID, YOU ARE USED NEW ID TO LOG IN!!! ';\n      } else {\n        this.valuesID = '';\n      }\n      if ( this.userAlfresco.lastname !== this.newUserAlfresco.lastname) {\n        this.valuesLastName = 'Old LastName: ' + this.userAlfresco.lastname + ' New LastName: ' + this.newUserAlfresco.lastname;\n      } else {\n        this.valuesLastName = '';\n      }\n  }\n  cancelChanges() {\n    this.newUserAlfresco.id = this.userAlfresco.id;\n    this.newUserAlfresco.firstName =  this.userAlfresco.firstName;\n    this.newUserAlfresco.lastname = this.userAlfresco.lastname ;\n    this.newUserAlfresco.email = this.userAlfresco.email ;\n    this.valuesLastName = '' ; this.valuesID = ''; this.valuesEmail = '';  this.valuesFirstName = '';\n  }\n  saveChanges(form: NgForm) {\n    if (form.valid) {\n      console.log('Prepare rest to save user information');\n      console.log('JSON: ' + JSON.stringify(this.newUserAlfresco));\n      if (this.newUserAlfresco.lastname !== this.userAlfresco.lastname\n        || this.newUserAlfresco.firstName !== this.userAlfresco.firstName\n        || this.newUserAlfresco.email !== this.userAlfresco.email) {\n        this.rest.updateAlfrescoUserInformation(JSON.stringify(this.newUserAlfresco));\n      }\n    }\n  }\n\n  getValidationMessages(state: any, thingName?: string) {\n    let thing: string = state.path || thingName;\n    let messages: string[] = [];\n    if (state.errors) {\n      for (let errorName in state.errors) {\n        switch (errorName) {\n          case 'required':\n            messages.push(`You must enter a ${thing}`);\n            break;\n          case 'minlength':\n            messages.push(`A ${thing} must be at least\n                            ${state.errors['minlength'].requiredLength}\n                            characters`);\n            break;\n          case 'pattern':\n            messages.push(`The ${thing} contains\n                             illegal characters`);\n            break;\n          case 'email':\n            messages.push(`The ${thing} is NOT an email`);\n            break;\n        }\n      }\n    }\n    return messages;\n  }\n  getFormValidationMessages(form: NgForm): string[] {\n    let messages: string[] = [];\n    Object.keys(form.controls).forEach(k => {   this.getValidationMessages(form.controls[k], k)\n      .forEach(m => messages.push(m));\n    });\n    return messages;\n  }\n\n}\n","export class UserAlfresco {\n\n  constructor(\n    public id?: string,\n    public firstName?: string,\n    public lastname?: string,\n    public email?: string) { }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}